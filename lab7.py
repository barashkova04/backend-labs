from flask import Blueprint, render_template, request, redirect, session, abort, jsonify
lab7 = Blueprint('lab7', __name__)

@lab7.route('/lab7/')
def main():
    return render_template('lab7/index.html')

films = [
    {
        "title": "The Boy in the Striped Pajamas",
        "title_ru": "Мальчик в полосатой пижаме",
        "year": 2008,
        "description": "История, происходящая во время Второй мировой войны и показанная сквозь \
            глаза невинного и ничего не подозревающего о происходящих событиях\
            Бруно, восьмилетнего сына коменданта концентрационного лагеря. Его\
            случайное знакомство и дружба с еврейским мальчиком по другую сторону\
            ограды лагеря, в конечном счете, приводит к самым непредсказуемым и\
            ошеломительным последствиям."
    },
    {
        "title": "Mean Girls",
        "title_ru": "Дрянные девчонки",
        "year": 2004,
        "description": "Проведя детство в Африке с родителями-зоологами, Кэйди Хэрон думала, \
            что знает всё про правило «выживает сильнейший». Но закон джунглей \
            полностью пересматривается, когда домашняя 15-летняя девушка в первый\
            раз попадает в обычную школу и влюбляется в бывшего парня самой\
            популярной девчонки в школе."
    },
    {
        "title": "Twilight",
        "title_ru": "Сумерки ",
        "year": 2008,
        "description": "Семнадцатилетняя девушка Белла переезжает к отцу в небольшой городок\
            Форкс. Она влюбляется в загадочного одноклассника, который, как оказалось, \
            происходит из семьи вампиров, отказавшихся от нападений на людей. \
            Влюбиться в вампира. Это страшно? Это романтично, это прекрасно и \
            мучительно, но это не может кончиться добром, особенно в вечном \
            противостоянии вампирских кланов, где малейшее отличие от окружающих \
            уже превращает вас во врага."
    },
    {
        "title": "Kinds of Kindness",
        "title_ru": "Виды доброты",
        "year": 2024,
        "description": "Последние 10 лет офисный работник Роберт живёт по строгим указаниям\
            своего босса Рэймонда, который не забывает финансово благодарить подопечного и обеспечивать \
            ему красивую жизнь. Рэймонд в записках указывает, когда Роберту нужно заниматься сексом с женой, \
            что ему читать, когда и что есть и какой у него должен быть распорядок дня. Однажды Рэймонд \
            приказывает Роберту устроить автокатастрофу с обязательной госпитализацией."
    },
    {
        "title": "Fight Club",
        "title_ru": "Бойцовский клуб",
        "year": 1999,
        "description": "Сотрудник страховой компании страдает хронической бессонницей и отчаянно пытается вырваться \
            из мучительно скучной жизни. Однажды в очередной командировке он встречает некоего Тайлера Дёрдена — харизматического \
            торговца мылом с извращенной философией. Тайлер уверен, что самосовершенствование — удел слабых, а единственное, ради \
            чего стоит жить, — саморазрушение. Проходит немного времени, и вот уже новые друзья лупят друг друга почем зря на стоянке \
            перед баром, и очищающий мордобой доставляет им высшее блаженство. Приобщая других мужчин к простым радостям физической жестокости, \
            они основывают тайный Бойцовский клуб, который начинает пользоваться невероятной популярностью."
    },
    {
        "title": "En man som heter Ove",
        "title_ru": "Вторая жизнь Уве",
        "year": 2015,
        "description": "Уве - пожилой въедливый ворчун, достающий соседей вечными придирками. Он впадает в ярость при виде брошенного не \
            туда мусора или неправильно припаркованной машины. И кроет на чем свет стоит легкомысленную семейку новосёлов, в которой \
            папаша и гвоздя вбить не способен. Зато Уве умеет всё. В доме и в гараже у него всегда идеальный порядок. Как и в мыслях. \
            Вот только жизнь давно перестала иметь для него смысл."
    },
]

@lab7.route('/lab7/rest-api/films/', methods=['GET'])
def get_films():
    return films

@lab7.route('/lab7/rest-api/films/<int:id>', methods=['GET'])
def get_film(id):
    if id < 0 or id >= len(films):
        abort(404)
    return films[id]

@lab7.route('/lab7/rest-api/films/<int:id>', methods=['DELETE'])
def del_film(id):
    if id < 0 or id >= len(films):
        abort(404)
    del films[id]
    return '', 204

@lab7.route('/lab7/rest-api/films/<int:id>', methods=['PUT'])
def put_film(id):
     film = request.get_json()
     if film['description'] == '':
         return {'description' : 'Заполните описание'}, 400
     films[id] = film
     return films[id]
     
@lab7.route('/lab7/rest-api/films/', methods=['POST'])
def add_film():
    film = request.get_json()
    
    # Validation checks
    if not film.get('title') and not film.get('title_ru'):
        return {'error': 'Название (оригинальное или русское) должно быть непустым.'}, 400
    if not film.get('title_ru'):
        return {'error': 'Русское название должно быть непустым.'}, 400
    if 'year' not in film or not (1895 <= film['year'] <= 2023):
        return {'error': 'Год должен быть от 1895 до текущего.'}, 400
    if 'description' not in film or not film['description'] or len(film['description']) > 2000:
        return {'error': 'Описание должно быть непустым и не более 2000 символов.'}, 400
    
    films.append(film)
    return jsonify({'id': len(films) - 1}), 201